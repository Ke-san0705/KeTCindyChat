{"filename": "dense_grid_with_labels.md", "question": "KeTCindyで、1.5単位ごとに区切られた高密度な方眼紙を作成し、列番号・行番号を自動で表示する方法を教えてください。", "code": "Ketinit();\n//Setfiles(\"\");\n\nSetparent(Cdyname()+\"fig\");\n\nxLst=apply(1..50,2);  // 幅50マス\nyLst=apply(1..50,2);  // 高さ50マス\nrmvL=[];\n\nTabledata(xLst,yLst,rmvL,[10,\"dr_0.5\"]);\n\n// 基準線\nTlistplot([\"r1\",\"c0r0\",\"c50r0\",\"c50r50\",\"c0r50\",\"c0r0\"]);\n\nct=r5;\nsen=5;\nforall(1..5,\n  tmp1=\"c0r\"+sen;\n  tmp2=\"c50r\"+sen;\n  Tlistplot(text(ct),[tmp1,tmp2],[\"dr_0.5\"]);\n  ct=ct+1;\n  tmp1=\"c\"+sen+\"r0\";\n  tmp2=\"c\"+sen+\"r50\";\n  Tlistplot(text(ct),[tmp1,tmp2],[\"dr_0.5\"]);\n  ct=ct+1;\n  sen=sen+10;\n);", "explanation": "このスクリプトは、KeTCindyで高密度な方眼紙を作成する構成例です。特徴は以下の通りです：\n\n* `xLst=apply(1..50,2)`：2単位ごと（1.5単位幅ベース）で区切られた水平線\n* `Tlistplot(...)`：特定のラインや外枠、メモリ線を明示的に強調\n* `text(ct)`：ラベル番号をテキストとして利用する準備（必要に応じて数値記載可）\n\n用途：\n\n* 高解像度のグリッドで正確な描画支援が必要な場合\n* グラフ用紙や幾何学の作図下地として有用\n\n**ラベル（タグ）**\n`Tabledata`, `Tlistplot`, `grid`, `dense_grid`, `labeling`, `geometry`, `2D`, `graphpaper`, `plot_background`\n\n```\n```", "tags": ["KeTCindy"]}
{"filename": "dynamic_gridpaper_ticks.md", "question": "KeTCindyで方眼紙のようなグリッドを描きたいのですが、メモリ付きで2, 5, 10マスごとに線を太くしたり、数値を表示する方法はありますか？", "code": "Ketinit();\nSetparent(Cdyname()+\"fig\");\n\n// 太線の区切りを調整\nthick0=[0,\"dr\",\"Move=SW_xy\"];\nthick5=[0,\"dr_0.3\",\"Move=SW_xy\"];\n\nif(tick==1,\n  vtick=[];\n  forall((round(SW.x))..(round(NE.x)),\n    tick=concat(tick,[#,SW.y,\"s\",text(#)]);\n  );\n);\n\nif(tick==2,\n  htick=[];\n  forall((round(SW.y))..(round(NE.y)),\n    tick=concat(tick,[SW.x,#,\"s\",text(#)]);\n  );\n);\n\nExpr(concat(htick,vtick),[]);\n\n// グリッドの基本表\nw=round(NE.x-SW.x);\nh=round(NE.y-SW.y);\nxL0=apply(1..w,10);\nyL0=apply(1..h,10);\ntb1=Tabledata(xL0,yL0,[],thick);\nxThick=apply(tb1_1,#1);\nyThick=apply(tb1_2,#2);\n\n// メモリ線の間隔に応じて、太さ・ラベル設定\nif(w>0,\n  ndx=round(10/w/vd);\n  xL=apply(1..ndx,vd);\n  ndy=round(10/h/vd);\n  yL=apply(1..ndy,vd);\n  tb2=Tabledata(xL,yL,[],thin);\n\n  cL=select(1..length(tb2_1),contains(xThick,tb2_1_#1));\n  rL=select(1..length(tb2_2),contains(yThick,tb2_2_#1));\n  cL=apply(cL,\"c\"+text(#)+\"/0c\"+text(length(tb2_2)));\n  rL=apply(rL,\"r\"+text(#)+\"/0r\"+text(length(tb2_1)-1));\n  Changetablestyle(concat(cL,rL),[\"nodisp\"]);\n);\n\nFigpdf();\nWindispg();", "explanation": "このコードでは、KeTCindyを使って以下のような「方眼紙」を作成します：\n\n* `Tabledata(...)`：方眼のマス目を構成\n* `xThick`, `yThick`：X軸・Y軸方向に太線を入れる箇所の記録\n* `Expr(...)`：目盛りのラベル（数値）を表示\n* `vd`（メモリ幅）を2, 5, 10などに変えることで、グリッド感を調整\n* `Changetablestyle(...,\"nodisp\")`：不要な補助線を非表示にして明瞭化\n\nこのような仕組みは、座標学習や図解補助教材として応用できます。\n\n**ラベル（タグ）**\n`Tabledata`, `Expr`, `Changetablestyle`, `grid`, `graphpaper`, `tickmark`, `dynamic_display`, `2D`, `geometry`\n\n```\n```", "tags": ["KeTCindy"]}
{"filename": "function_plot_with_tenkey_input.md", "question": "KeTCindyでテンキーのようなUIから関数式を入力し、その関数をプロットしたいです。どうすればできますか？", "code": "Ketinit();\nSetparent(Cdyname()+\"fig\");\n\naPLB=[7,0];\nPLB=Tenkeybrd(aPLB,[\"ShadeY\"]);\n\nPlotdata(\"1\",\"x^2\",\"x\",[\"Color=blue\"]);\nLineplot(\"1\",[[0,1],[1,2]],[\"dr,0.5\"]);\n\nif(textKey!=1,\n  End=IsKeyaction(key);\n  drawtext(PLB,[0.8,0.8],Tenkeys,size->16);\n  textKey=1;\n);\n\nif(End!=1,\n  a=parse(Tenkeys);\n  fun=Assign(\"x^\"+a,[\"a\"]);\n  Plotdata(\"2\",fun,\"x\",[\"Colored\"]);\n  Tenkeys=\"\";\n  End=[s:0];\n);\n\nFigpdf();\nWindispg();", "explanation": "このコードは、KeTCindyで**テンキーUIを用いて関数の式を入力**し、その入力値に基づいたグラフを描画する機構を示しています。\n\n* `Tenkeybrd(...)`：テンキーの作成（文字入力UI）\n* `textKey`/`End`：入力の確定と判定の制御\n* `parse(...)`：文字列としての入力を `Assign()` により関数に変換\n* `Plotdata(...)`：入力関数を動的に描画\n\nこのように、KeTCindyをインタラクティブな**計算・描画ツール**として活用できます。\n\n**ラベル（タグ）**\n`Tenkeybrd`, `Plotdata`, `Assign`, `parse`, `dynamic_input`, `interactive_plot`, `calculator`, `function_input`, `2D`, `geometry`, `UI`\n\n```\n```", "tags": ["KeTCindy"]}
{"filename": "graphin_table_logarithmic_decay.md", "question": "KeTCindyで、表の一部にグラフを埋め込みたいです。また、対数減衰に関連した式や記号、定数 \\( e \\) や \\( \\sqrt{e} \\) などを含めて表現したいです。", "code": "Ketinit();\n//Setfiles(\"\");\n\nCh=[2];\n\nif(contains(Ch,1),\n  Setfiles(\"graph\");\n  Setwindow([-0.5,7.5],[0,2.4]);\n  Plotdata(\"1\",\"10*log(10/x)\",\"x=[0,XMAX]\",[\"Exe=0\",\"Num=100\"]);\n);\n\nif(contains(Ch,2),\n  xLst=[15,15,15,15,15,15,15];\n  yLst=[10,10,10,10,40];\n  rmvL=[\"r1c1r2\",\"c3r4r5\",\"c4r5\",\"c5r4r5\",\"c6r4r5\"];\n  Tabledata(xLst,yLst,rmvL);\n\n  Tlistplot([\"r1\",\"c1r0r4\"]);\n  Tlistplot([\"c2r1\",\"c2r2r5\"]);\n  Tlistplot([\"c1r2\",\"c1r3\"]);\n  Tlistplot([\"r3\",\"c2r3r4\"]);\n  Tlistplot([\"c3r2\",\"c3r3\"]);\n  Tlistplot([\"c4r2\",\"c4r3\"]);\n  Tlistplot([\"c5r2\",\"c5r3\"]);\n  Tlistplot([\"c6r2\",\"c6r3\"]);\n\n  Putrowexpr(1,\"c\",[\"x\",\"0\",\"%cdots\",\"%sqrt{e}\",\"%cdots\"]);\n  Putrowexpr(2,\"c\",[\"y\",\"\",\"+\",\"0\",\"=\",\"\"]);\n  Putrowexpr(3,\"c\",[\"y\",\"\",\"-\",\"\"]);\n  Putrowexpr(4,\"c\",[\"y\",\"=\",\"%nearrow\",\"%dfrac{10}{e}\",\"%searrow\",\"%dfrac{15}{e^{\\sqrt{e}}}\",\"%searrow\"]);\n  Putcell(\"c0r4\",\"r5r5\",\"0\",\"\\\\input{graph}\");\n);\n\n//Figpdf();\nWindispg();", "explanation": "このコードは、KeTCindyで次のような複合的な構成を可能にします：\n\n* `Plotdata`：10倍対数の減衰グラフを生成（例：$y = 10 \\log(10/x)$）\n* `Tabledata`：表の構造を構成。複数の `rmvL` 指定で一部のセルを消去\n* `Putrowexpr`：指数関数・記号・分数を含む表記を1行に自動配置\n* `\\input{graph}`：表の下部セルにグラフを挿入（TikZ的構成に適用）\n\nこの構成は、関数と表を同時に視覚的に表したい教材に非常に有効です。\n\n**ラベル（タグ）**\n`Tabledata`, `Plotdata`, `Putrowexpr`, `Putcell`, `input_graph`, `log_decay`, `math_table`, `e`, `sqrt`, `2D`, `geometry`, `plot_in_table`\n\n```\n```", "tags": ["KeTCindy"]}
{"filename": "logarithmic_gridpaper.md", "question": "KeTCindyで縦軸または横軸を対数目盛にした方眼紙（ロググラフ）を描くにはどうすればいいですか？", "code": "Ketinit();\n//Setparent(Cdyname()+\"fig\");\nSetketcindyjs([\"color=lightgray\"]);\n\nAddax();\n\nthick0=[0,\"dr\",\"Move=SW_xy\"];\nthick1=[0,\"dr_0.3\",\"Move=SW_xy\"];\n\nif(n>0,\n  w=round(NE.x-SW.x);\n  h=round(NE.y-SW.y);\n\n  xL=apply(1..10,h/10);\n  yL=apply(1..10,w/10);\n  tb1=Tabledata(xL,yL,[],thick);\n  xThick=apply(tb1_1,#1);\n  yThick=apply(tb1_2,#2);\n\n  // 対数スケールの目盛計算\n  nn=round(10*log10(w/5));\n  ndx=round(10*w/5);\n  xL=apply(1..ndx,.5);\n  yL=exp(h/nn);\n  yL=apply(1..10,log(1+#)/log(10));\n  yL=apply(yL,#*h/10);\n  yL=reverse(yL);\n  yAL=[];\n  forall(1..nn,\n    yAL=concat(yAL,yL);\n  );\n\n  tb2=Tabledata(xL,yAL,[],thin);\n\n  // 不要線の除去と強調ラベル\n  cL=select(1..length(tb2_1),contains(xThick,tb2_2_#1));\n  cL=apply(cL,\"c\"+text(#)+\"/r\"+text(length(tb2_2)));\n  rL=select(1..length(tb2_2),contains(yThick,tb2_2_#2));\n  rL=apply(rL,\"r\"+text(#)+\"/c\"+text(length(tb2_1)));\n  Changetablestyle(concat(cL,rL),[\"nodisp\"]);\n);\n\n// 目盛ラベル表示（オプション）\nif(tick0,\n  htick=[];\n  forall((round(SW.x))..(round(NE.x)),\n    htick=concat(htick,[[#,SW.y,\"s\",text(#)]]);\n  );\n);\nif(tick1,\n  vtick=[];\n  forall(0..nn,\n    y=tick=concat(tick,[[SW.x,yAL_#,\"s\",text(10^#)]]);\n  );\n);\nExpr(concat(htick,vtick),[]);", "explanation": "このコードは、KeTCindyで対数グラフのような方眼紙を生成するための構成例です：\n\n* `exp(...)`・`log(...)` を使って対数目盛を作成\n* `Tabledata(...,[],thin)`：縦方向に対数目盛グリッドを描画\n* `yAL`：logスケールの補助値配列を繰り返して対数目盛を模倣\n* `Expr(...)`：数値ラベル（例：1, 10, 100, ...）を表示\n\n**ラベル（タグ）**\n`Tabledata`, `Expr`, `log_scale`, `logarithmic`, `grid`, `graphpaper`, `tickmark`, `axis_label`, `2D`, `plot_base`\n\n```\n```", "tags": ["KeTCindy"]}
{"filename": "loglog_gridpaper.md", "question": "KeTCindyで、X軸もY軸も両方対数スケールにしたログ・ロググラフ用の方眼紙を作成したいです。どうすればできますか？", "code": "Ketinit();\n//Setparent(Cdyname()+\"fig\");\nSetketcindyjs([\"color=lightgray\"]);\n\nAddax(0);\n\nif(nmx>0 && nmy>0,\n  thick0=[0,\"dr\",\"Move=SW_xy\"];\n  thick1=[0,\"dr_0.3\",\"Move=SW_xy\"];\n\n  w=round(NE.x-SW.x);\n  h=round(NE.y-SW.y);\n  xL=apply(1..10,h/10);\n  yL=apply(1..10,w/10);\n  tb1=Tabledata(xL,yL,[],thick);\n  xthick=apply(tb1_1,#1);\n  ythick=apply(tb1_2,#2);\n\n  // X軸の対数目盛配列\n  xall=[];\n  forall(1..nmx,\n    x0=apply(1..10,log(1+#)/log(10));\n    xL=apply(x0,#*h/10);\n    xall=concat(xall,xL);\n  );\n\n  // Y軸の対数目盛配列\n  yall=[];\n  forall(1..nmy,\n    y0=apply(1..10,log(1+#)/log(10));\n    yL=apply(y0,#*w/10);\n    yL=reverse(yL);\n    yall=concat(yall,yL);\n  );\n\n  tb2=Tabledata(xall,yall,[],thin);\n\n  // 不要な外枠を消す\n  cL=select(1..length(tb2_1),contains(xthick,tb2_2_#1));\n  cL=apply(cL,\"c\"+text(#)+\"/r\"+text(length(tb2_2)-1));\n  rL=select(1..length(tb2_2),contains(ythick,tb2_2_#2));\n  rL=apply(rL,\"r\"+text(#)+\"/c\"+text(length(tb2_1)-1));\n  Changetablestyle(concat(cL,rL),[\"nodisp\"]);\n);\n\n// ラベル追加オプション\nif(tick0>0,\n  htick=[];\n  forall(0..nmx,\n    htick=concat(htick,[[SW.x+xthick_#,\"s\",text(10^#)]]);\n  );\n  Expr(concat(htick,[]),[]);\n);\n\nif(tick1>0,\n  vtick=[];\n  forall(0..nmy,\n    vtick=concat(vtick,[[SW.y+ythick_#,\"s\",text(10^#)]]);\n  );\n  Expr(concat([],vtick),[]);\n);\n\n//Figpdf([10,10,5,5]);\nWindispg();", "explanation": "このスクリプトでは、KeTCindyを使って **X軸・Y軸ともに対数スケール** に設定した方眼紙（log-logグラフ用）を描画します。\n\n* `apply(1..10, log(1+#)/log(10))`：1〜10の対数を等間隔に計算\n* `concat(xall,xL)`：各スケール分のログ目盛を結合\n* `Tabledata(xall, yall, [], thin)`：細線グリッドを生成\n* `Changetablestyle`：不要な罫線を削除して外枠を整える\n\nこの形式は、**指数関数・べき乗関数・スケーリング現象の可視化**などで活躍します。\n\n**ラベル（タグ）**\n`Tabledata`, `Expr`, `log_scale`, `loglog`, `graphpaper`, `tickmark`, `plot_base`, `grid`, `2D`, `geometry`\n\n```\n```", "tags": ["KeTCindy"]}
{"filename": "matrix_table_plot.md", "question": "KeTCindyで表（マトリクス）を描画し、数式や記号を含んだ行列演算の図を作るにはどうすればいいですか？", "code": "Ketinit();\n//Setfiles(\"\");\n\nSetparent(Cdyname()+\"fig\");\n\nxLst=[10,10,12,10,12,10];\nyLst=[10,10,10,10,10];\nrmvL=[];\nrmvL=[\"r2c1c2\"];\n\nTabledata(xLst,yLst,rmvL);\n\nCh=[1,2];\n\nif(contains(Ch,1),\n  Tlistplot([\"c1r1\",\"c2r3\"]);\n  Tlistplot([\"c1r3\",\"c2r1\"]);\n);\n\nif(contains(Ch,2),\n  Putrowexpr(1,\"c\",[\"x\",\"0\",\"%cdots\",\"1\",\"%cdots\",\"2\"]);\n  Putrowexpr(2,\"c\",[\"x\",\"=\",\"+\",\"0\",\"=\",\"\"]);\n  Putrowexpr(3,\"c\",[\"y\",\"=\",\"%nearrow\",\"\",\"%searrow\",\"\"]);\n);\n\nFigpdf();\nWindispg();", "explanation": "このコードは、行列・表形式の構造をKeTCindy上に可視的に表現する方法を示しています。\n\n* `Tabledata(xLst,yLst,rmvL)`：各セルサイズを定義し、任意のセルを非表示（rmv）に設定\n* `Tlistplot`：セルの間に線を描画する（矢印や強調線など）\n* `Putrowexpr`：行に数式や記号を挿入（LaTeXスタイル記法をサポート）\n\n記号の例：\n\n* `%cdots`：中央のドット「⋯」\n* `%nearrow`：↗\n* `%searrow`：↘\n\nこのようにして、行列の演算過程や変形の可視化が可能になります。\n\n**ラベル（タグ）**\n`Tabledata`, `Putrowexpr`, `Tlistplot`, `matrix`, `grid`, `math_table`, `expression_input`, `2D`, `geometry`\n\n```\n```", "tags": ["KeTCindy"]}
{"filename": "multitable_side_by_side.md", "question": "KeTCindyで、2つの表を横に並べて描きたいです。また、一部の枠線だけを表示・非表示にして、比較しやすくしたいのですが、どうすれば良いですか？", "code": "Ketinit();\n//Setfiles(\"\");\n\nSetparent(Cdyname()+\"fig\");\n\nPutpoint(\"C\",[4,0],[C.x,0]);  // 右側表の基準点\n\nxLst=[10,10,10];\nyLst=[10,10];\n\nTabledatalight(xLst,yLst,[],[\"Setwindow=sn\"]);\nPutrowexpr(1,\"c\",[\"x\",\"20\",\"30\"]);\nPutrowexpr(2,\"c\",[\"y\",\"60\",\"40\"]);\n\nTabledatalight(xLst,yLst,[],[\"Move=C.xy\"]);\nPutrowexpr(1,\"c\",[\"x\",\"30\",\"20\"]);\nPutrowexpr(2,\"c\",[\"y\",\"60\",\"50\"]);\n\nChangetablestyle([\"r1c0c3\",\"r2c0c3\"],[\"da\"]);  // 枠線非表示設定\n\nFigpdf();\nWindispg();", "explanation": "このコードでは、KeTCindyで以下の構成を実現しています：\n\n* `Tabledatalight(...)`：余計な外枠のないテーブルを描画\n* `Putrowexpr(...)`：行ごとにテキストや数値を配置\n* `Putpoint(\"C\",...)`：第2表の位置基準点を明示的に設定\n* `Changetablestyle(...,[\"da\"])`：r1〜r2行・c0〜c3列の枠線を非表示に\n\nこのようにして、**2つの表の数値比較やスタイルの比較**が可能になります。\n\n**ラベル（タグ）**\n`Tabledatalight`, `Putrowexpr`, `Putpoint`, `Changetablestyle`, `multiple_tables`, `side_by_side`, `table_comparison`, `styling`, `2D`, `geometry`\n\n```\n```", "tags": ["KeTCindy"]}
{"filename": "nested_tables_and_cell_merge.md", "question": "KeTCindyで、表の中に別の表を埋め込むような入れ子構造を作りたいです。また、特定のセルを結合したり、枠線を消す方法はありますか？", "code": "Ketinit();\n//Setfiles(\"\");\n\nxLst=[10,10,10];\nyLst=[10,10,10];\n\nTabledatalight(xLst,yLst,[]);  // 外枠表\nPutrowexpr(0,\"c\",[\"A\",\"B\",\"C\"]);\nPutrowexpr(1,\"c\",[\"D\",\"X\",\"F\"]);\nPutrowexpr(2,\"c\",[\"G\",\"H\",\"I\"]);\n\ntmp=[5,5];  // 内側テーブルのセルサイズ\nTabledatalight(tmp,tmp,[],[\"Move=\"+text(tmp),\"Setwindow=1\"]);\nPutrowexpr(0,\"c\",[\"x\",\"y\"]);\nPutrowexpr(1,\"c\",[\"z\",\"w\"]);\n\nChangetablestyle([\"c0r0r2\",\"c2r0r2\",\"r0c0c2\"],[\"nodisp\"]);  // 外枠削除", "explanation": "このコードは、KeTCindyで\\*\\*入れ子構造の表（Nested Tables）\\*\\*を作成するための構成例です。\n\n* `Tabledatalight(...)` を2回使用して、外側と内側の表を作成\n* `Putrowexpr(...)` でそれぞれのセル内容を行ごとに配置\n* `[\"Move=\"+text(tmp)]` によって内側テーブルの表示位置を調整\n* `Changetablestyle(...)` で外側表の一部セル枠を非表示に（結合風の見た目に）\n\nこのような表は、**変数の階層構造や局所的な対比**に便利です。\n\n**ラベル（タグ）**\n`Tabledatalight`, `Putrowexpr`, `Changetablestyle`, `nested_table`, `merged_cells`, `multi_layer`, `table_structure`, `2D`, `geometry`\n\n```\n```", "tags": ["KeTCindy"]}
{"filename": "table_custom_cellstyle.md", "question": "KeTCindyで特定のセルの境界線やスタイルをカスタマイズした表を作成するにはどうすればよいですか？", "code": "Ketinit();\n//Setfiles(\"\");\n\nSetparent(Cdyname()+\"fig\");\n\nxLst=[16,16,16,16,16,16];\nyLst=[10,10];\nrmvL=[\"c1r2\",\"c2r1r2\",\"c3r1r2\",\"c4r1r2\",\"c5r1r2\"];\n\nTabledata(xLst,yLst,rmvL);\n\n// セルへの文字列挿入\nPutcell(\"<c0r0\",\"c6r1\",\"lt\",\"Ans\");\nPutcell(\"<c0r0\",\"c6r1\",\"rb2\",\"cm\");\n\n// 特定セルの罫線スタイル変更（点線で表示）\nChangeTablestyle([\"r1c0c6\"],[\"da\"]);\n\nFigpdf();\nWindispg();", "explanation": "このコードは、以下のような目的で表をカスタム描画する方法を示しています：\n\n* `Tabledata(xLst,yLst,rmvL)`：セルサイズと非表示マスを設定\n* `Putcell(...,\"lt\",...)`：左上揃えで文字列「Ans」を挿入\n* `Putcell(...,\"rb2\",...)`：右下揃えで文字列「cm」を挿入\n* `ChangeTablestyle(...)`：特定のセルの罫線（ここでは破線 `\"da\"`）に変更\n\nこれにより、表内のレイアウトや強調、罫線構成が柔軟に制御できます。\n\n**ラベル（タグ）**\n`Tabledata`, `Putcell`, `ChangeTablestyle`, `table`, `grid`, `labeling`, `style`, `2D`, `geometry`\n\n```\n```", "tags": ["KeTCindy"]}
{"filename": "table_doubleline_adjust.md", "question": "KeTCindyで表の一部に二重線を引いたり、行列の線や構造を細かく位置調整したいのですが、どうすれば可能ですか？", "code": "Ketinit();\n//Setfiles(\"\");\n\nxLst=[16,16,16,16,16,16];\nyLst=[10,10];\nrmvL=[\"c1r2\",\"c2r1r2\",\"c3r1r2\",\"c4r1r2\",\"c5r1r2\"];\n\nTabledata(xLst,yLst,rmvL);\n\n// 二重線を模した線の調整と描画\nTranslatedata(\"1\",\"tblr1c0c6\",[0,0.1]);  // 基本線を少し上に\nChangetablestyle(\"c2r0r1\",[\"nodisp\"]);  // 中央の線を消す\nTranslatedata(\"2a\",\"tblc2r0r1\",[0.05,0]);  // 右側線をずらす\nTranslatedata(\"2b\",\"tblc2r0r1\",[-0.05,0]); // 左側線をずらす", "explanation": "このコードは、KeTCindyで表構成をより詳細にカスタマイズするための方法を示しています。\n\n* `rmvL`：削除するセルを指定してレイアウト調整\n* `Translatedata(...)`：任意の罫線を座標単位でずらすことで「二重線」や「強調線」を表現\n* `Changetablestyle(...,[\"nodisp\"])`：一部の線を非表示にして、重ねて表示される線の効果を演出\n\n視覚的なアクセントや意味づけとして、表の特定部位を強調するのに非常に有効です。\n\n**ラベル（タグ）**\n`Tabledata`, `Translatedata`, `Changetablestyle`, `table`, `grid`, `doubleline`, `adjustment`, `layout`, `2D`, `geometry`\n\n```\n```", "tags": ["KeTCindy"]}
