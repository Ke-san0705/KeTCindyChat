{"filename": "concat_cube.md", "question": "KeTCindyで複数の立方体を連結して表示し、構造の可視化と隠面処理を施すにはどうすれば良いですか？", "code": "Start3d();\n//Putaxes3d(5);\nXyzax3data(\"\",\"x=[-5,5]\",\"y=[-5,5]\",\"z=[-5,5]\");\n\nvertex=[[2,2,-2],[-2,-2,-2],[-2,2,-2],[2,-2,-2],\n        [2,2,2],[-2,-2,2],[-2,2,2],[2,-2,2]];\nedge=[[1,2],[1,5],[1,4],[1,3],[4,3,2],\n      [6,5],[6,2],[6,7],[8,5,4]];\ncubic=[vertex,edge];\n\nVertexEdgeFace(\"1\",cubic);\n\nif(nohidflg!=1,\n  printIn(15);\n  Nohiddenbyfaces(\"1\",[\"ax3d\",\"phe3d1\"],[\"phf3d1\"]);\n);\n\nif(skeleflg!=1,\n  Skeletonparadata(\"1\",[1.5]);\n);\n\nWindispg();", "explanation": "このスクリプトは、**3D空間上に2つの立方体を結合した構造体を可視化し、隠面処理と骨組み表示を併用**する例です。\n\n* `vertex=...` と `edge=...`：2つの立方体の頂点と辺を定義\n* `VertexEdgeFace(...)`：頂点と辺・面の情報から立体を構築\n* `Nohiddenbyfaces(...)`：隠面消去処理（正面の視界を強調）\n* `Skeletonparadata(...)`：骨組みのみを描画するオプション（スライダ切替対応）\n\n**活用例：**\n\n* 複合立体の表現（直方体や連結構造）\n* 可視性の改善（隠面表示切替による学習補助）\n* 数学・工学・建築分野の立体構成モデリング", "tags": ["3D"]}
{"filename": "cone_section_maxima.md", "question": "Maximaで円錐と平面の交線を解析し、KeTCindyで可視化するにはどうすれば良いですか？", "code": "Start3d([A,B,C,D]);\n\nPutaxes3d(5.5);\n//Xyzax3data(\"\",\"x=[-4,4]\",\"y=[-4,4]\",\"z=[-2,6]\");\n\nListplot(\"sa\",[[-6,6],[-6,0]],[\"color->[0,0,1]\"]);\nPutonseg(\"A\",\"sgsa\");\nPutonseg(\"B\",\"sgsa\");\nC.xy=[-10,0];\n\nListplot([C,D],[\"color->[0,0,1]\"]);\nangle=re(arctan2(D-C));\ndrawtext(D+[0,0.2],text(angle*180/pi),align->\"left\");\n\nptA=[0,0,A.y];\nptB=[|D-C|*cos(angle),|D-C|*sin(angle),B.y];\n\nfd=[\n\"z=2.5*(2-R))\",\n\"x=R*cos(T)\",\"y=R*sin(T)\",\n\"R=[0,2]\",\"T=[0,2*pi]\",\"e\"\n];\n\ncmdL=[\n \"n:[n1,n2,n3]\",[],\n \"b:[-n[2],n[1],0]\",[],\n \"c1:n[2]*b[3]-n[3]*b[2]\",[],\n \"c2:n[3]*b[1]-n[1]*b[3]\",[],\n \"c3:n[1]*b[2]-n[2]*b[1]\",[],\n \"c:[c1,c2,c3]\",[],\n \"nb:sqrt(b.b)\",[],\n \"nc:sqrt(expand(c.c))\",[],\n \"p:[0,0,zA]+r*cos(T)*b/nb+r*sin(T)*c/nc\",[],\n \"eq:x^2+y^2-(k-z/hgt)^2\",[],\n \"eq2:ev(eq,[x=p[1],y=p[2],z=p[3]])\",[],\n \"sol:solve(eq2=0,r)\",[],\n \"p1:ev(p,sol[1])\",[],\n \"p2:ev(p,sol[2])\",[],\n \"nv:[diff(eq,x),diff(eq,y),diff(eq,z)]\",[],\n \"p1::p2::nv::eq2\",[]\n];\nCalcbyM(\"base\",cmdL,[\"\"]);\nnv=ptB-ptA;\nSpaceline(\"AB\",[ptA,ptB],[\"color->[1,0,0]\"]);\nArrowhead(Parapt(ptB),Parapt(ptB)-Parapt(ptA),\n    [\"color->[1,0,0]\"]);\ncrv=Assign(base_1,\n    [\"zA\",ptA_3,\"k\",2,\"hgt\",2.5,\"n1\",nv_1,\"n2\",nv_2,\"n3\",nv_3]);\nclr=[1,0,0];\nclrc=Colorrgb2cmyk(clr);\n//  Setcolor(clrc);\nSpacecurve(\"1\",crv,\"T=[0,2*pi]\",[\"nodisp\",\"color->\"+clr]);\n//  Setcolor(black);\n  Fontsize(\"s\");\n  Expr([-2,5.3],\"c\",nv_1+\"x+\"+nv_2+\"y+\"+nv_3+\"(z-2)=0\");\n  Expr(Parapt([0,0,5]),\"ne\",\"5\");\n  Expr(Parapt([2,0,0]),\"w\",\"2\");\n  Fontsize(\"n\");\n\nCh=[1,2];\nif(contains(Ch,1),\n nvec=Assign(base_3,[\"zA\",ptA_3,\"k\",2,\"hgt\",2.5]);\n tmp=Sileq(nvec);\n cmdL=[\n  \"x:R*c\",[],\n  \"y:R*s\",[],\n  \"z:2.5*(2-R)\",[],\n  \"eq:\"+tmp,[],\n  \"eq:expand(eq)\",[],\n  \"eq:expand(eq/r)\",[],\n  \"sol:solve([eq=0,s^2+c^2=1],[s,c])\",[],\n  \"ans1:ev([x,y,z],sol[1])\",[],\n  \"ans2:ev([x,y,z],sol[2])\",[],\n  \"ans1::ans2\",[]\n ];\n CalcbyM(\"ans\",cmdL,[\"\"]);\n\n pvec=[sin(THETA)*cos(PHI),sin(THETA)*sin(PHI),cos(THETA)];\n tmp=Assign(ans_1,[\"p1\",pvec_1,\"p2\",pvec_2,\"p3\",pvec_3]);\n Spacecurve(\"s1\",tmp,\"R=[0,2]\");\n tmp=Assign(ans_2,[\"p1\",pvec_1,\"p2\",pvec_2,\"p3\",pvec_3]);\n Spacecurve(\"s2\",tmp,\"R=[0,2]\");\n);\nif(contains(Ch,2),\n Spacecurve(\"cr\",\"2*[cos(T),sin(T),0]\",\"T=[0,2*pi]\",\n   [\"Num=100\"]);\n Divnohidhid(\"1\",\"sc3dcr\",nvec);\n tmp2=select(sc3d1,#_3>=0 & #_3<=5);\n tmp1=select(1..(length(tmp2)-1),\n norm(tmp2_(#+1)-tmp2_#)>1);\n if(length(tmp1)==0,\n   Spaceline(\"1n1\",tmp2);\n   Divnohidhid(\"1n1\",\"sl3d1n1\",nvec);\n ,\n   tmp3=[tmp2_(1..tmp1_1)];\n   n1=tmp1_1+1;\n   forall(2..(length(tmp1)),\n     n2=#;\n     tmp3=append(tmp3,tmp2_(n1..n2));\n     n1=n2;\n   );\n   tmp3=append(tmp3,tmp2_(n1..(length(tmp2))));\n   forall(1..length(tmp3),\n     Spaceline(\"1n\"+text(#),tmp3_#);\n     Divnohidhid(\"1n\"+text(#),\"sl3d1n\"+text(#),nvec);\n   );\n  );\n //Crvsfparadata(\"1\",\"ax3d\",\"sfbd3d1\",fd,[\"r\"],[\"do\"]);\n);\nif(contains(Ch,3),\n  Sf3data(\"1\",fd);\n);\n\nWindispg();\n\n//Help(\"Divno\");", "explanation": "このスクリプトは、**Maximaと連携して3次元空間における円錐と平面の交線を求め、KeTCindyで可視化する**例です。\n\n* `Start3d()`：3D空間の初期化\n* `Xyzax3data(...)`：空間の軸範囲を定義\n* `Putonseg3d(...)`：点やベクトルの定義（図形の構成要素）\n* `Spacecurve(...)`：Maximaから得た交線の式を描画\n* `Divnohidden(...)`：交線の可視性処理\n* `Assign`, `clacbyM`, `Parapt`, `Arrowhead`：KeTCindyとMaximaを連携させるための関数群\n\nこのような処理は、**立体図形の交差問題・ベクトル解析・関数空間の可視化**に有効です。", "tags": ["Start3d"]}
{"filename": "cubic_cut.md", "question": "KeTCindyで2つの立方体の交差部分を表現し、その立体構造を視覚化するにはどうすればよいですか？", "code": "Start3d();\nPutaxes3d(5);\nXyzax3data(\"\",\"x=[-5,5]\",\"y=[-5,5]\",\"z=[-5,5]\");\n\npA3d=[-3.5,0.0,0];\npB3d=[3.5,0.0,0];\npC3d=[0.0,-3.5,0];\npD3d=[0.0,3.5,0];\n\nPointdata3d(\"1\",[pA3d,pB3d,pC3d],[\"Color=blue\"]);\npD3d_1=[pB3d_1,pB3d_2,0];\npD3d_2=[0,pC3d_2,pC3d_3];\n\nPointdata3d(\"2\",[pD3d_1,pB3d_2,pC3d_3],[\"Color=yellow\"]);\n\n// 点の位置設定\nPutonseg3d(\"H\",[pA3d,pE3d]);\nPutonseg3d(\"K\",[pC3d,pE3d]);\nPutonseg3d(\"L\",[pC3d,pF3d]);\n\n// 交差の計算\nIntersectspGL(\"pM\",\"pG~pD\",\"H~K~L\",[\"ie\"]);\nIntersectspGL(\"pN\",\"pF~pB\",\"H~K~L\",[\"ie\"]);\n\ntmp1=[[pH,pM3d,pN3d,L],[1,2,3,4,5],[4,5,6]];\ntmp2=[[pA3d,pD3d,pM3d],[1,2,3,4]];\ntmp3=[[pM3d,pD3d,pB3d,pN3d],[1,2,3,4]];\ntmp4=[[pC3d,L,pN3d,pB3d,K,pA3d],[1,2,3,4,5],[1,2,6,7,8]];\n\ndtp=concatobj([tmp1,tmp2,tmp3,tmp4]);\n\nVertexEdgeFace(\"1\",dtp);\n\nCh=[Z];\nif(contains(Ch,1),\n  Nohiddenbyfaces(\"1\",[\"phe3d1\"],[\"phf3d1\"]);\n);\nif(contains(Ch,2),\n  Skeletonparadata(\"1\",[\"phe3d1\"],[1.5]);\n);\n\nWindispg();", "explanation": "このコードは、**空間中の2つの立方体を交差・切断し、その交差領域を明示的に可視化する**例です。\n\n* `Pointdata3d(...)`：基本点の配置\n* `Putonseg3d(...)`：ベクトル上の点の導出（中点や交点）\n* `IntersectspGL(...)`：空間内の線分・平面交差計算\n* `concatobj(...)`：構成面を結合し立体化\n* `VertexEdgeFace(...)`：立体データとして描画\n* `Nohiddenbyfaces(...)`, `Skeletonparadata(...)`：隠面処理と骨組み切替\n\n**活用例：**\n\n* 幾何の空間交差・切断演習\n* 多面体と空間構成の視覚教材\n* 工学設計図のモデリング・可視化補助", "tags": ["3D"]}
{"filename": "cubic_cut2.md", "question": "KeTCindyで立方体の断面と構成線を表示し、任意の線分を交差させた切断立体を描画するにはどうすれば良いですか？", "code": "Start3d();\n//Xyzax3data(\"\",\"x=[-5,5]\",\"y=[-5,5]\",\"z=[-5,5]\");\n\nPutonseg3d(\"A\",[0,0,2]);\nPutonseg3d(\"B\",[0,0,-2]);\nPutonseg3d(\"C\",[0,2,0]);\nPutonseg3d(\"D\",[0,-2,0]);\nPutonseg3d(\"E\",[A3d_1,B3d_2,0],[\"fix\"]);\nPutonseg3d(\"F\",[0,B3d_2,C3d_3],[\"fix\"]);\nPutonseg3d(\"G\",[A3d_1,B3d_2,C3d_3],[\"fix\"]);\n\nPutonseg3d(\"P\",[0,A3d_1,B3d_2,0]);\nPutonseg3d(\"Q\",[0,B3d_2,C3d_3],[\"fix\"]);\n\nSpaceline(\"1\",[0,A]);\nSpaceline(\"2\",[0,B]);\nSpaceline(\"3\",[0,C]);\nSpaceline(\"4\",[0,D]);\nSpaceline(\"5\",[0,E]);\nSpaceline(\"6\",[0,F]);\nSpaceline(\"7\",[0,A]);\nSpaceline(\"8\",[B,F]);\n\nalledg=apply([1..8],\"s3d\"+text(#));\n\nPutonseg3d(\"H\",[E,C]);\nPutonseg3d(\"K\",[C,F]);\nPutonseg3d(\"L\",[E,A]);\n\nIntersectspGL(\"M\",\"F~B\",\"H~K~L\",\"put\");\n\nSpaceline(\"9\",[H,L,M,K]);\n\n// チェックと切断処理\nif(contains(Ch,1),\n  changestyle3d(alledg,[\"do\"]);\n);\nif(contains(Ch,2),\n  tmp1=[0,A,D,B];\n  tmp2=[B,D,N,M];\n  tmp3=[B,O,C,N];\n  tmp4=[O,K,N,C];\n  tmp5=[A,L,H,K];\n  tmp6=[L,H,M,K];\n  tmp7=[C,H,K];\n\n  dtp=concatobj([tmp1,tmp2,tmp3,tmp4,tmp5,tmp6,tmp7]);\n  VertexEdgeFace(\"1\",dtp);\n);\n\nif(contains(Ch,3),\n  Nohiddenbyfaces(\"1\",[\"phe3d1\"],[\"phf3d1\"]);\n);\nif(contains(Ch,4),\n  Skeletonparadata(\"1\");\n);\n\nWindispg();", "explanation": "このコードは、**立方体の構造の中に任意の点と線を通して切断・構成要素を表示する**高度な図形生成例です。\n\n* `Putonseg3d(...)`：辺や対角上に点を定義（交点など）\n* `IntersectspGL(...)`：点群と線分・平面交点計算\n* `Spaceline(...)`：直線の描画\n* `concatobj(...)`：切断された面群の定義\n* `VertexEdgeFace(...)`：立体の面・辺・頂点の構築\n\n**活用例：**\n\n* 立方体切断の空間把握\n* 空間ベクトルと立体構造の練習\n* 工業設計・モデリングの補助教材", "tags": ["3D"]}
{"filename": "embed_circle_on_plane.md", "question": "3次元空間において、任意の平面上に円を描きたいのですが、どのようにEmbedを用いればよいですか？", "code": "Start3d();\nPutaxes3d(5);\nXyzax3data(\"\",\"x=[-5,5]\",\"y=[-5,5]\",\"z=[-5,5]\");\n\n// 平面と基準点の指定\nPointdata3d(\"O\",[0,0,0],[\"notex\"]);\nPointdata3d(\"A\",[2,1,2],[\"Size=4\",\"notex\"]);\nPerplane(\"B~C\",\"A\",A3d-O3d,[\"L=1,red\",\"Size=3\",\"Color=red\",\"notex\"]);\n\n// 平面上のベクトル（AB, AC）による基底とEmbedの準備\nAB3d=B3d-A3d;\nAC3d=C3d-A3d;\npD3d=A3d+2*(AB3d-AC3d);\npE3d=A3d+2*(AB3d+AC3d);\npF3d=A3d+2*(-AB3d+AC3d);\npG3d=A3d+2*(-AB3d-AC3d);\nSpaceline(\"1\",[D3d,E3d,F3d,G3d,D3d]);\n\n// 円の描画（Embedで平面に変換）\nCircledata(\"1\",[[0,0],[1,0]],[\"nodisp\"]);\nEmbed(\"1\",[\"cr1\"],A3d+x*(B3d-A3d)+y*(C3d-A3d),[\"x,y\"]);\n\nif(nohidflg!=1,\n  Nohiddenbyfaces(\"\",\"[ax3d]\",\"[face3d]\");\n);\n\nWindispg();", "explanation": "このコードは、**3次元空間において、平面上に円を描くためのEmbed操作の具体例**です。\n\n* `Perplane(...)`：指定した法線ベクトルから平面を生成\n* `Embed(...)`：2次元座標系（x, y）で定義した円を3次元空間上の平面に写像\n* `Circledata(...)`：円の元データ（平面上での円）を指定\n* `Spaceline(...)`：Embedされた領域の確認や骨組み表示などの補助的描画\n\nこの手法は、**平面内の2次元図形を3次元空間へ自然に拡張するための基本的な方法**です。", "tags": ["3D"]}
{"filename": "embed_hatch_on_plane.md", "question": "3次元空間で任意の平面上に円を描き、その内部をハッチング（斜線）で塗りつぶしたいのですが、どうすれば良いですか？", "code": "Start3d();\nPutaxes3d(5);\nXyzax3data(\"\",\"x=[-5,5]\",\"y=[-5,5]\",\"z=[-5,5]\");\n\n// 平面の定義と基準ベクトル\nPerplane(\"B~C\",\"A\",A3d-O3d,[\"notex\"]);\nAB3d=B3d-A3d;\nAC3d=C3d-A3d;\npt1=A3d+2*(AB3d-AC3d);\npt2=A3d+2*(AB3d+AC3d);\npt3=A3d+2*(-AB3d+AC3d);\npt4=A3d+2*(-AB3d-AC3d);\n\n// 平面上の枠・円・ハッチング\nSpaceline(\"1\",[pt1,pt2,pt3,pt4,pt1]);\nCircledata(\"1\",[[0,0],[1,0]],[\"nodisp\"]);\nEmbed(\"1\",[\"cr1\"],A3d+x*(B3d-A3d)+y*(C3d-A3d),[\"x,y\"]);\nHatchdata(\"1\",[\"i\",\"cr1\"],[\"nodisp\"]);\nEmbed(\"2\",\"hai\",A3d+x*(B3d-A3d)+y*(C3d-A3d),[\"x,y\"]);\n\n// 骨組み構造（スケルトン）表示\nif(skeleflg!=1,\n  tmp1=[\"ax3d\"];\n  tmp2=[\"sl3d1\",\"em3d1\",\"em3d2\"];\n  Skeletonparadata(\"1\",tmp1,tmp2,[]);\n);\n\nWindispg();", "explanation": "このスクリプトは、**Embed関数を用いて3D平面上に円を描き、さらにその領域をハッチング処理する**実例です。\n\n* `Circledata(...)`：円の元データ（2D）\n* `Embed(...)`：任意の平面上に写像\n* `Hatchdata(...)`：円内部の斜線処理（描画指定により非表示にも対応）\n* `Spaceline(...)`：四角形の骨組み\n* `Skeletonparadata(...)`：対象領域の補助表示（骨構造）\n\nこの技法は、**投影平面内の面構造や断面の可視化**に有効であり、教材開発や幾何解析に応用できます。", "tags": ["3D"]}
{"filename": "polyhedron_structure.md", "question": "KeTCindyで三次元空間に多面体を描画し、辺・面の構造や骨組み表示を行う方法を教えてください。", "code": "Start3d();\n//Setparent(Cdyname()+\"fig\");\nSetketcindyjs([\"Color=white\"]);\n//Putaxes3d(5);\nXyzax3data(\"\",\"x=[-5,5]\",\"y=[-5,5]\",\"z=[-5,5]\");\n\npolytd=[[ [1,2,4,7,2,4,7,0],[-2.47,2.47,0],[-2.47,-2.47,0],\n          [0,0,3.5],[0,0,-3.5] ],\n        [[1,2,5],[1,5,4],[1,4,6],[1,6,3],[3,4,5],[3,6,4]]];\n\nVertexedgeface(\"1\",polytd,[ \"Obj=jY\"]);\n\nif(nohidflg!=1,\n  tmp1=[\"ax3d\",\"phe3d1\"];\n  tmp2=[\"phf3d1\"];\n  Nohiddenbyfaces(\"1\",tmp1,tmp2,[],[\"do\"]);\n);\n\nif(skeleflg!=1,\n  tmp1=[\"ax3d\",\"phe3d1\"];\n  Skeletonparadata(\"1\",tmp1,tmp1,[1.5]);\n);\n\nWindispg();", "explanation": "このスクリプトは、**3次元空間上に任意の多面体（polyhedron）を定義し、それを可視化・解析する**ための基本例です。\n\n* `polytd=...`：頂点座標および面構成をリストで定義\n* `Vertexedgeface(...)`：指定した頂点と面から多面体を構築\n* `Nohiddenbyfaces(...)`：隠面消去による輪郭強調（表示ON/OFF対応）\n* `Skeletonparadata(...)`：骨組み表示。立体構造の強調と理解支援\n\n**活用例：**\n\n* 正多面体や任意多面体の構造解析\n* 教育用に面・辺・頂点の関係性を可視化\n* 数学オリンピック・STEAM教材向けコンテンツ生成", "tags": ["3D"]}
{"filename": "solid_import_obj.md", "question": "KeTCindyで `.obj` 形式の3Dモデルを読み込んで表示するにはどうすれば良いですか？", "code": "Start3d();\nSetketcindyjs([\"Label=[]\"]);\n\n// ユーザディレクトリ内の obj ファイルを読み込む\n// 例: http://mitani.cs.tsukuba.ac.jp/polyhedron/index.html\nSetdirectory(\"cmetohm(\\\"~/polyhedrons_obj\\\")\");\npolyS=Readobj(\"r04.obj\",[\"Size=3.5\"]);\nSetdirectory(\"cmywork\");\n\nXyzax3data(\"\",\"x=[-5,5]\",\"y=[-5,5]\",\"z=[-5,5]\");\nVertexedgeface(\"1\",polyS,[\"Obj=y\"]);\n\n// 表示制御（非表示処理・骨組み表示）\nif(nohidflg!=1,\n  tmp1=[\"ax3d\",\"phf3d1\"];\n  tmp2=[\"phf3d1\"];\n  Nohiddenbyfaces(\"1\",tmp1,tmp2);\n);\nif(skeleflg!=1,\n  tmp=[\"ax3d\",\"phf3d1\"];\n  Skeletonparadata(\"1\",tmp,tmp,[1.5]);\n);\n\nWindispg();", "explanation": "このコードは、**KeTCindyで3Dモデル（.obj形式）を読み込み、表示・非表示・骨組みを制御する一連の処理**を示しています。\n\n* `Readobj(...)`：外部の`.obj`形式のファイルを3Dオブジェクトとして読み込み\n* `Vertexedgeface(...)`：読み込んだポリゴンオブジェクトをKeTCindy上に描画\n* `Setdirectory(...)`：ファイル読み込み用のパスを設定\n* `Nohiddenbyfaces(...)`：隠面消去処理を実行\n* `Skeletonparadata(...)`：骨組み構造をオーバーレイ表示\n\n**応用例：**\n\n* 外部で作成した多面体・CADオブジェクトの教育教材化\n* オブジェクト構造の視認性強化（骨組み表示）\n* WebGLとの連携を見据えた3D処理の可視化演習", "tags": ["Start3d"]}
{"filename": "tetra_basic.md", "question": "正四面体の頂点を指定して立体を描き、隠面消去や骨組み表示を行いたいです。どうすればよいですか？", "code": "Start3d();\nSetketcindyJS([\"Label=[]\"]);\n\n// XYZ軸\nXyzax3data(\"\",\"x=[-5,5]\",\"y=[-5,5]\",\"z=[-2,5]\");\n\n// 正四面体の頂点\nPointdata3d(\"O\",[0,0,0],[\"nodisp\"]);\nPointdata3d(\"A\",[2*sqrt(1/3),-1/sqrt(3),0]);\nPointdata3d(\"B\",[2*sqrt(1/3),1/sqrt(3),0]);\nPointdata3d(\"C\",[0,2*sqrt(0.3),sqrt(3)]);\n\n// 頂点ラベル付きで点のリストを連結し、立体定義\ntmp=[[\"A\",\"B\",\"C\",\"D\"]];\ndtp=concatobj(tmp);\n\n// 多面体として描画\nVertexedgeface(\"1\",dtp,[\"Obj=n\"]);\n\n// 隠面消去処理（オプション）\nif(nohidflg==1,\n  tmp1=[\"ax3d\",\"phe3d1\"];\n  tmp2=[\"phf3d1\"];\n  Nohiddenbyfaces(\"1\",tmp1,tmp2);\n);\n\n// 骨組み表示（オプション）\nif(skeleflg==1,\n  tmp=[\"ax3d\",\"phe3d1\"];\n  Skeletonparadata(\"1\",tmp,tmp,[1.5]);\n);\n\nWindispg();", "explanation": "このコードは、\\*\\*正四面体の描画とその構造可視化（隠面処理・骨組み表示）\\*\\*を実現します。\n\n* `Start3d()`：3D空間を初期化\n* `Pointdata3d(...)`：頂点 O, A, B, C を明示的に指定して定義\n* `concatobj(...)`：点の順序から面情報を生成\n* `Vertexedgeface(...)`：立体（頂点・辺・面）として登録\n* `Nohiddenbyfaces(...)`：視点に基づき隠面処理（前面だけ表示）\n* `Skeletonparadata(...)`：立体のワイヤーフレーム（骨組み）表示\n\n**活用例：**\n\n* 正多面体の構造理解\n* 立体の視点変化による見え方の学習\n* 3Dモデリングと幾何学教材の基礎として", "tags": ["Start3d"]}
